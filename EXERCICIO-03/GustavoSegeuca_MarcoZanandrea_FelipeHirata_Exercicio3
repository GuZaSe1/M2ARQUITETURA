#Disciplina: Arquitetura e Organização de Processadores,
#Atividade: Avaliação 01 – Programação em Linguagem de Montagem,
#Programa 03,
#Grupo: Gustavo Segeuca, Marco Zanandrea e Felipe Hirata

.data
vetor: .word 0, 1, 2, 3, 4	# vetor com 5 inteiros de 0 a 4
msg_soma: .asciz "Soma = "	
msg_elementos: .asciz "Soma dos elementos do vetor:\n"

.text
.globl main 	# main

main:
  # imprimir título
  la a0, msg_elementos 		# string msg-elementos em a0
  addi a7, zero, 4		# syscall para imprimir o string
  ecall

  # imprimir elementos do vetor
  la t0, vetor			# carrega o endereço base do vetor em t0
  addi t1, zero, 0		# inicializa índice i (t1) com 0
  addi t2, zero, 5		# define o tamanho do vetor (5) em t2

print_loop:
  beq  t1, t2, fim_print       # if: i == 5, termina o loop
  slli t3, t1, 2               # t3 = i * 4
  add  t4, t0, t3              # endereço do vetor[i] em t4
  lw   a0, 0(t4)               # carrega vetor[i] em a0
  addi a7, zero, 1             # syscall para imprimir inteiro
  ecall

  addi a0, zero, 10            # nova linha
  addi a7, zero, 11            # syscall para imprimir valores do vetor
  ecall

  addi t1, t1, 1		# adiciona índice i
  jal zero, print_loop		# volta para o início do loop

fim_print:
  # somar elementos
  la t0, vetor			# endereco base do vetor em t0
  addi t1, zero, 0		#inicia indice i
  addi t2, zero, 5		# tamanho do vetor = 5
  addi t3, zero, 0		# acumulador da soma em t3

soma_loop:
  beq  t1, t2, fim_soma        # if: i == 5, termina o loop
  slli t4, t1, 2               # calcula offset: t4 = i * 4
  add  t5, t0, t4              # endereco de vetor[i] em t5
  lw   t6, 0(t5)               # carrega vetor[i] em t6
  add  t3, t3, t6              # soma valor ao acumulador
  addi t1, t1, 1               # adiciona índice i
  jal  zero, soma_loop         # volta para o início do loop

fim_soma:
  la   a0, msg_soma		# string "Soma = " em a0
  addi a7, zero, 4		# syscall para imprimir string
  ecall				# imprime a string

  add  a0, zero, t3		# coloca o valor da soma em a0
  addi a7, zero, 1		# syscalll para imprimir inteiro 
  ecall				# imprime a soma

  addi a0, zero, 10            # nova linha
  addi a7, zero, 11            # syscall para imprimir caractere
  ecall                        

  addi a7, zero, 10            # syscall para encerrar o programa (exit)
  ecall                        # termina o programa
